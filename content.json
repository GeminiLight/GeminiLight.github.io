{"meta":{"title":"Gemini向光性","subtitle":"The light never goes on","description":"","author":"GeminiLight","url":"https://www.blog.geminilight.cn","root":"/"},"pages":[{"title":"about","date":"2020-08-13T14:21:20.000Z","updated":"2020-08-14T17:32:08.232Z","comments":false,"path":"about/index.html","permalink":"https://www.blog.geminilight.cn/about/index.html","excerpt":"","text":".hobits-label { height: 30px; line-height: 30px; width: 100px; border-radius: 20px; background: #6699ff; color: #123456; } 11111 软件工程本科在读学生 软件工程本科在读学生 电影 音乐"},{"title":"tags","date":"2020-08-13T14:17:32.000Z","updated":"2020-08-13T15:40:49.327Z","comments":false,"path":"tags/index.html","permalink":"https://www.blog.geminilight.cn/tags/index.html","excerpt":"","text":""},{"title":"photos","date":"2020-08-14T06:56:45.000Z","updated":"2020-08-14T06:56:46.100Z","comments":true,"path":"photos/index.html","permalink":"https://www.blog.geminilight.cn/photos/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-08-13T14:17:43.000Z","updated":"2020-08-13T17:18:04.113Z","comments":false,"path":"categories/index.html","permalink":"https://www.blog.geminilight.cn/categories/index.html","excerpt":"","text":""},{"title":"404","date":"2020-01-09T05:25:01.000Z","updated":"2020-08-14T08:28:43.569Z","comments":true,"path":"/404.html","permalink":"https://www.blog.geminilight.cn/404.html","excerpt":"","text":"404 ​ ​ ​ ​ ​ &lt;path d=”M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5 ​ s-28.485-16.599-34.877-24.192c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13 ​ c6.755-0.61,20.546-0.608,41.785,5.087s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z”&gt; ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ &lt;path id=”ring” fill=”none” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-miterlimit=”10” d=” M476.562,101.461c-30.404,2.164-49.691,4.221-49.691,8.007c0,6.853,63.166,12.408,141.085,12.408s141.085-5.555,141.085-12.408 c0-3.378-15.347-4.988-40.243-7.225”&gt; ​ &lt;path id=”ringShadow” opacity=”0.5” fill=”none” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-miterlimit=”10” d=” M483.985,127.43c23.462,1.531,52.515,2.436,83.972,2.436c36.069,0,68.978-1.19,93.922-3.149”&gt; ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ ​ &lt;path id=”cord” fill=”none” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” M273.813,410.969c0,0-54.527,39.501-115.34,38.218c-2.28-0.048-4.926-0.241-7.841-0.548 c-68.038-7.178-134.288-43.963-167.33-103.87c-0.908-1.646-1.793-3.3-2.654-4.964c-18.395-35.511-37.259-83.385-32.075-118.817”&gt; ​ &lt;path id=”backpack” fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” M338.164,454.689l-64.726-17.353c-11.086-2.972-17.664-14.369-14.692-25.455l15.694-58.537 c3.889-14.504,18.799-23.11,33.303-19.221l52.349,14.035c14.504,3.889,23.11,18.799,19.221,33.303l-15.694,58.537 C360.647,451.083,349.251,457.661,338.164,454.689z”&gt; ​ ​ ​ ​ ​ ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M360.633,363.039c1.352,1.061,4.91,5.056,5.824,6.634l27.874,47.634c3.855,6.649,1.59,15.164-5.059,19.02l0,0 ​ c-6.649,3.855-15.164,1.59-19.02-5.059l-5.603-9.663”&gt; ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M388.762,434.677c5.234-3.039,7.731-8.966,6.678-14.594c2.344,1.343,4.383,3.289,5.837,5.793 ​ c4.411,7.596,1.829,17.33-5.767,21.741c-7.596,4.411-17.33,1.829-21.741-5.767c-1.754-3.021-2.817-5.818-2.484-9.046 ​ C375.625,437.355,383.087,437.973,388.762,434.677z”&gt; ​ ​ ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M301.301,347.66c-1.702,0.242-5.91,1.627-7.492,2.536l-47.965,27.301c-6.664,3.829-8.963,12.335-5.134,18.999h0 ​ c3.829,6.664,12.335,8.963,18.999,5.134l9.685-5.564”&gt; ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M241.978,395.324c-3.012-5.25-2.209-11.631,1.518-15.977c-2.701-0.009-5.44,0.656-7.952,2.096 ​ c-7.619,4.371-10.253,14.09-5.883,21.71c4.371,7.619,14.09,10.253,21.709,5.883c3.03-1.738,5.35-3.628,6.676-6.59 ​ C252.013,404.214,245.243,401.017,241.978,395.324z”&gt; ​ ​ ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M353.351,365.387c-7.948,1.263-16.249,0.929-24.48-1.278c-8.232-2.207-15.586-6.07-21.836-11.14 ​ c-17.004,4.207-31.269,17.289-36.128,35.411l-1.374,5.123c-7.112,26.525,8.617,53.791,35.13,60.899l0,0 ​ c26.513,7.108,53.771-8.632,60.883-35.158l1.374-5.123C371.778,395.999,365.971,377.536,353.351,365.387z”&gt; ​ &lt;path fill=”none” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M269.678,394.912L269.678,394.912c26.3,20.643,59.654,29.585,93.106,25.724l2.419-0.114”&gt; ​ ​ ​ ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M312.957,456.734l-14.315,53.395c-1.896,7.07,2.299,14.338,9.37,16.234l0,0c7.07,1.896,14.338-2.299,16.234-9.37l17.838-66.534 ​ C333.451,455.886,323.526,457.387,312.957,456.734z”&gt; ​ ​ ​ ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M296.315,452.273L282,505.667c-1.896,7.07-9.164,11.265-16.234,9.37l0,0c-7.07-1.896-11.265-9.164-9.37-16.234l17.838-66.534 ​ C278.993,441.286,286.836,447.55,296.315,452.273z”&gt; ​ ​ ​ ​ ​ ​ &lt;path id=”headStripe” fill=”none” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M330.868,261.338c-7.929,1.72-15.381,5.246-21.799,10.246” transform=”matrix(0.9999,0.0168,-0.0168,0.9999,4.4214,-4.6842)” style=”transform-origin: 0px 0px;”&gt; ​ &lt;path fill=”#FFFFFF” stroke=”#0E0620” stroke-width=”3” stroke-linecap=”round” stroke-linejoin=”round” stroke-miterlimit=”10” d=” ​ M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5s-28.485-16.599-34.877-24.192 ​ c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13c6.755-0.61,20.546-0.608,41.785,5.087 ​ s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z”&gt; ​ ​ &lt;polygon id=”glassShine” fill=”none” stroke=”#0E0620” stroke-width=”3” stroke-miterlimit=”10” points=” ​ 278.436,375.599 383.003,264.076 364.393,251.618 264.807,364.928 “ transform=”matrix(0.866,-0.5,0.5,0.866,-33.401,203.976)” style=”transform-origin: 0px 0px;”&gt; ​ ​ ​ ​ ​ ​ 404 ​ 哇！你探索到了还没被发现的神秘地方 觉得孤单了就坐飞船返回吧 返回首页"},{"title":"","date":"2020-08-14T18:35:15.723Z","updated":"2020-08-14T18:35:15.723Z","comments":true,"path":"google8b51d02836dd4446.html","permalink":"https://www.blog.geminilight.cn/google8b51d02836dd4446.html","excerpt":"","text":"google-site-verification: google8b51d02836dd4446.html"}],"posts":[{"title":"Python之with语句详解","slug":"Python/Python之with语句详解","date":"2020-08-13T16:00:00.000Z","updated":"2020-08-14T05:00:58.227Z","comments":true,"path":"2020/08/14/Python/Python之with语句详解/","link":"","permalink":"https://www.blog.geminilight.cn/2020/08/14/Python/Python%E4%B9%8Bwith%E8%AF%AD%E5%8F%A5%E8%AF%A6%E8%A7%A3/","excerpt":"在我们使用Python的时候，常使用到如下的代码块: 1234567# 文件读取with open(file, &#x27;r&#x27;) as f: # CODE BLOCK ## 梯度计算with tf.GradientTape() as g: # CODE BLOCK # 在很多场景中，使用with语句来可以让我们可以更好地来管理资源和简化代码，它可以看做是对try/finally模式的简化。它原理上是利用了上下文管理器，下文简要介绍将对其执行原理和自定义的方法。","text":"在我们使用Python的时候，常使用到如下的代码块: 1234567# 文件读取with open(file, &#x27;r&#x27;) as f: # CODE BLOCK ## 梯度计算with tf.GradientTape() as g: # CODE BLOCK # 在很多场景中，使用with语句来可以让我们可以更好地来管理资源和简化代码，它可以看做是对try/finally模式的简化。它原理上是利用了上下文管理器，下文简要介绍将对其执行原理和自定义的方法。 上下文管理器概念上下文管理协议（Context Management Protocol）包含方法 __enter__() 和 __exit__() ，支持该协议的对象要实现这两个方法。 上下文管理器（Context Manager）支持上下文管理协议的对象，这种对象必须实现 __enter__() 和 __exit__() 方法。上下文管理器定义执行with语句时要建立的运行时上下文，负责执行with语句块上下文中的进入与退出操作。通常使用with语句调用上下文管理器，也可以通过直接调用其方法来使用。 __enter__() with语句执行时，先获取上下文管理器对象，随后调用其 __enter__() 若有 as var 语句，则将返回值赋给变量var 可以返回上下文管理器对象本身，也可以是其他相关对象 __exit__() 带有三个参数 exc_type, exc_val, exc_tb 若上下文管理器对象执行无异常，则三个参数均为 None 若发生异常，则三个参数分别为 异常类型，异常值和tracback信息 with语句执行过程123456# EXP: 表达式# VAR: 变量名，[as VAR][可选]# BlOCK: 代码块with EXP as VAR: BLOCK 执行代码时，先执行 EXPR 语句，生成上下文管理器对象 context_manager； 获取上下文管理器的 __exit()__ 方法，并保存起来用于之后的调用； 调用上下文管理器的 __enter__() 方法，且可将返回值赋给as语句变量； 执行BLOCK中的表达式； 不管是否执行过程中是否发生了异常，执行上下文管理器的 __exit__() 方法， 执行“清理”工作，如释放资源等。 如果执行过程中没有出现异常，或者语句体中执行了语句 break / continue / return ，则以 None 作为参数调用 __exit__(None, None, None) ； 如果执行过程中出现异常，则使用sys.exc_info得到的异常信息为参数调用 __exit__(exc_type, exc_value, exc_traceback) ； 出现异常时，如果 __exit__(type, value, traceback) 返回 False ，则会重新抛出异常，让with之外的语句逻辑来处理异常，这也是通用做法；如果返回True，则忽略异常，不再对异常进行处理。 自定义上下文管理器 它使代码更简练，可以简化try/finally模式 当代码异常产生时，__exit__() 会执行清理工作 可以对软件系统中的资源进行管理，比如数据库连接、共享资源的访问控制等 12345678910111213141516171819202122232425262728293031323334# coding = utf-8# 上下文管理器类class TestWith(object): def __init__(self): pass def __enter__(self): &quot;&quot;&quot;进入with语句的时候被调用 并将返回值赋给as语句的变量名 &quot;&quot;&quot; print(&#x27;__enter__&#x27;) return &quot;var&quot; def __exit__(self, exc_type, exc_val, exc_tb): &quot;&quot;&quot;离开with的时候被with调用&quot;&quot;&quot; print(&#x27;__exit__&#x27;) return True# with后面必须跟一个上下文管理器# 如果使用了as，则是把上下文管理器的 __enter__() 方法的返回值赋值给 target# target 可以是单个变量，或者由“()”括起来的元组（不能是仅仅由“,”分隔的变量列表，必须加“()”）if __name__ = &#x27;main&#x27;: with TestWith() as var: print(var)# 运行结果&#x27;&#x27;&#x27;__enter__var__exit__&#x27;&#x27;&#x27; 本例仅对应代码正常执行的流程，其他特殊情况不再一一列举，有兴趣可单独实验。 参考 浅谈 Python 的 with 语句Python中with用法详解Python中with使用","categories":[{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/tags/Python/"}]},{"title":"P-N-1-Numpy简介","slug":"PN1-Numpy简介","date":"2020-08-13T14:22:03.914Z","updated":"2019-08-22T04:26:24.255Z","comments":true,"path":"2020/08/13/PN1-Numpy简介/","link":"","permalink":"https://www.blog.geminilight.cn/2020/08/13/PN1-Numpy%E7%AE%80%E4%BB%8B/","excerpt":"","text":"Numpy简史： Python语言诞生后，开发人员就产生了数值计算的需求，科学社区开始考虑用它进行科学计算。 2006年，Travis Oliphant发布了NumPy库的第一个版本，整合了Numeric与Numarray包。 如今，Numpy广泛应用于计算多维数组和大型数组等方面。此外，它还提供多个函数，操作起数组来效率很高，还可用来实现高级数学运算。 当前，NumPy是开源项目，使用BSD许可证。 Numpy &amp; pandas NumPy是用Python进行科学计算，尤其是数据分析时，所用到的一个基础库。它是大量Python数学和科学计算包的基础，比如pandas库就用到了NumPy。 pandas库专门用于数据分析，充分借鉴了Python标准库NumPy的相关概念。 Numpy的安装： Windows： pip install numpy 若下载慢导致失败，可指定国内pip源（加上-i参数，指定pip源） pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple\\ 导入Numpy模块 &gt;&gt;&gt; import numpy as np","categories":[],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://www.blog.geminilight.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/tags/Python/"},{"name":"Numpy","slug":"Numpy","permalink":"https://www.blog.geminilight.cn/tags/Numpy/"}],"author":"Gemini向光性"},{"title":"data analysis","slug":"data-analysis","date":"2019-08-22T02:08:11.000Z","updated":"2019-08-22T04:45:07.106Z","comments":true,"path":"2019/08/22/data-analysis/","link":"","permalink":"https://www.blog.geminilight.cn/2019/08/22/data-analysis/","excerpt":"","text":"Python数据分析Python 涉及模块： Numpy pandas matplotlib","categories":[],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://www.blog.geminilight.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/tags/Python/"}],"author":"Gemini向光性"},{"title":"深度学习概念","slug":"DL 深度学习/data-analysis","date":"2019-08-22T02:08:11.000Z","updated":"2020-08-14T05:02:57.979Z","comments":true,"path":"2019/08/22/DL 深度学习/data-analysis/","link":"","permalink":"https://www.blog.geminilight.cn/2019/08/22/DL%20%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/data-analysis/","excerpt":"","text":"Python数据分析Python 涉及模块： Numpy pandas matplotlib","categories":[{"name":"DL 深度学习","slug":"DL-深度学习","permalink":"https://www.blog.geminilight.cn/categories/DL-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://www.blog.geminilight.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/tags/Python/"}],"author":"Gemini向光性"},{"title":"Start the Journey of My Blog","slug":"start","date":"2019-08-02T16:00:00.000Z","updated":"2020-08-14T15:49:28.596Z","comments":true,"path":"2019/08/03/start/","link":"","permalink":"https://www.blog.geminilight.cn/2019/08/03/start/","excerpt":"","text":"Welcome to My Programming World 有趣的灵魂终将相遇 欢迎来到我的博客 希望你能在这里找到对你有帮助的东西 Self IntroductionGemini向光性一个困在双子星座的流浪旅人目前就读于重庆大学软件工程专业在这里，我会记录下自己学习与生活的痕迹 座右铭：热爱code，渴望better Major Language博客主要会涉及以下语言： C C++ Python Web前端（HTML/ CSS/ JS等） 当然，之后也会涉及其他语言的 百度","categories":[{"name":"技术","slug":"技术","permalink":"https://www.blog.geminilight.cn/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"简介","slug":"简介","permalink":"https://www.blog.geminilight.cn/tags/%E7%AE%80%E4%BB%8B/"},{"name":"历程","slug":"历程","permalink":"https://www.blog.geminilight.cn/tags/%E5%8E%86%E7%A8%8B/"},{"name":"愿望","slug":"愿望","permalink":"https://www.blog.geminilight.cn/tags/%E6%84%BF%E6%9C%9B/"}]}],"categories":[{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/categories/Python/"},{"name":"DL 深度学习","slug":"DL-深度学习","permalink":"https://www.blog.geminilight.cn/categories/DL-%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"},{"name":"技术","slug":"技术","permalink":"https://www.blog.geminilight.cn/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://www.blog.geminilight.cn/tags/Python/"},{"name":"数据分析","slug":"数据分析","permalink":"https://www.blog.geminilight.cn/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"Numpy","slug":"Numpy","permalink":"https://www.blog.geminilight.cn/tags/Numpy/"},{"name":"简介","slug":"简介","permalink":"https://www.blog.geminilight.cn/tags/%E7%AE%80%E4%BB%8B/"},{"name":"历程","slug":"历程","permalink":"https://www.blog.geminilight.cn/tags/%E5%8E%86%E7%A8%8B/"},{"name":"愿望","slug":"愿望","permalink":"https://www.blog.geminilight.cn/tags/%E6%84%BF%E6%9C%9B/"}]}